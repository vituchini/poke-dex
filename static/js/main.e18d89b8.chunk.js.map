{"version":3,"sources":["components/common/Preloader/Preloader.module.css","components/Pokemons.module.css","api/api.js","redux/pokemons-reducer.js","utils/object-helpers.js","components/Pokemon.jsx","components/Pokemons.jsx","logo.svg","components/common/Preloader/Preloader.jsx","components/PokemonInfo.jsx","components/PokemonsContainer.jsx","redux/redux-store.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","instance","axios","baseURL","pokemonsAPI","count","get","then","res","data","name","url","TOGGLE_IS_FETCHING","SET_POKEMONS","SET_NEW_POKEMONS","IS_NEW_POKEMONS_LOADING","SET_CURRENT_POKEMON","SET_ALL_TYPES","SET_CURRENT_TYPE","initialState","isFetching","isNewPokemonsLoading","pokemons","nextPokemonsPage","currentPokemon","types","currentType","toggleIsFetching","type","getPokemonsInfo","dispatch","a","Promise","all","map","p","pokemonsReducer","state","action","nextPage","concat","newPokemons","next","Number","toZeroedNumber","number","countOfDigits","num","toString","length","repeat","UcFirst","string","charAt","toUpperCase","slice","Pokemon","pokemon","setCurrentPokemon","className","s","pokemonCard","onClick","id","src","alt","pokemonNameCard","pok","Pokemons","props","showedPokemons","filter","some","t","pokemonsContainer","noPokemons","pokemonsListBlockButton","loadMore","Preloader","preloaderWrapper","preloader","PokemonInfo","stats","Map","forEach","set","stat","base_stat","pokemonInfoCard","pokemonNameInfo","weight","moves","connect","pokemonsPage","isPokemonsLoading","getPokemons","results","pokeInfo","allTypes","setCurrentType","useEffect","PokemonsContainerWrapper","PokemonsContainer","pokemonsBlock","dropdownWrapper","dropdown","dropbtn","dropdownContent","pokemonsListBlock","pokemonInfoBlock","find","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e18d89b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderWrapper\":\"Preloader_preloaderWrapper__Z_9kp\",\"preloader\":\"Preloader_preloader__1Ej7J\",\"preloaderSpin\":\"Preloader_preloaderSpin__3wgTJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grass\":\"Pokemons_grass__3yltk\",\"poison\":\"Pokemons_poison__2Y4M3\",\"fire\":\"Pokemons_fire__2YKDl\",\"normal\":\"Pokemons_normal__2zy8q\",\"ground\":\"Pokemons_ground__3HvL3\",\"flying\":\"Pokemons_flying__28J9h\",\"bug\":\"Pokemons_bug__3WgL-\",\"electric\":\"Pokemons_electric__Xz83F\",\"water\":\"Pokemons_water__21Xmy\",\"fairy\":\"Pokemons_fairy__21X9F\",\"fighting\":\"Pokemons_fighting__1zJeS\",\"psychic\":\"Pokemons_psychic__153tu\",\"rock\":\"Pokemons_rock__1dXc1\",\"steel\":\"Pokemons_steel__2tDsw\",\"ice\":\"Pokemons_ice__2j1JA\",\"ghost\":\"Pokemons_ghost__2kozB\",\"dragon\":\"Pokemons_dragon__1KdBg\",\"dark\":\"Pokemons_dark__2PikI\",\"unknown\":\"Pokemons_unknown__6py8I\",\"shadow\":\"Pokemons_shadow__3q43M\",\"all\":\"Pokemons_all__3JDxs\",\"PokemonsContainerWrapper\":\"Pokemons_PokemonsContainerWrapper__3L-Gu\",\"PokemonsContainer\":\"Pokemons_PokemonsContainer__2lHqn\",\"pokemonCard\":\"Pokemons_pokemonCard__3HFAd\",\"pokemonsBlock\":\"Pokemons_pokemonsBlock__3aClE\",\"pokemonsListBlock\":\"Pokemons_pokemonsListBlock__3X6gl\",\"pokemonInfoBlock\":\"Pokemons_pokemonInfoBlock__3qz3f\",\"pokemonInfoCard\":\"Pokemons_pokemonInfoCard__2tndS\",\"pokemonsContainer\":\"Pokemons_pokemonsContainer__WjENt\",\"pokemonsListBlockButton\":\"Pokemons_pokemonsListBlockButton__1jYZY\",\"types\":\"Pokemons_types__2-Vrt\",\"type\":\"Pokemons_type__L8kI6\",\"pokemonNameInfo\":\"Pokemons_pokemonNameInfo__1zSrG\",\"pokemonNameCard\":\"Pokemons_pokemonNameCard__CuCKh\",\"dropbtn\":\"Pokemons_dropbtn__1kSEl\",\"dropdownWrapper\":\"Pokemons_dropdownWrapper__1OlI-\",\"dropdown\":\"Pokemons_dropdown__1NelP\",\"dropdownContent\":\"Pokemons_dropdownContent__cLYh0\",\"noPokemons\":\"Pokemons_noPokemons__3yVPp\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n        baseURL: 'https://pokeapi.co/api/v2/',\r\n    },\r\n);\r\n\r\nexport const pokemonsAPI = {\r\n    getPokemons(count = 12) {\r\n        return instance.get(`pokemon/?limit=${count}`)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n    getPokemonData(name = 'bulbasaur') {\r\n        return instance.get(`pokemon/${name}`)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n    getNewData(url) {\r\n        return axios.get(url)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n    getTypes() {\r\n        return instance.get(`type`)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n\r\n}\r\n","import {pokemonsAPI} from \"../api/api\";\r\n\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst SET_POKEMONS = 'SET_POKEMONS'\r\nconst SET_NEW_POKEMONS = 'SET_NEW_POKEMONS'\r\nconst IS_NEW_POKEMONS_LOADING = 'IS_NEW_POKEMONS_LOADING'\r\nconst SET_CURRENT_POKEMON = 'SET_CURRENT_POKEMON'\r\nconst SET_ALL_TYPES = 'SET_ALL_TYPES'\r\nconst SET_CURRENT_TYPE = 'SET_CURRENT_TYPE'\r\nlet initialState = {\r\n    isFetching: true,\r\n    isNewPokemonsLoading: false,\r\n    pokemons: [],\r\n    nextPokemonsPage: '',\r\n    currentPokemon: 1,\r\n    types: [],\r\n    currentType: 'all'\r\n\r\n}\r\nconst pokemonsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_POKEMONS: {\r\n            return {\r\n                ...state,\r\n                pokemons: [...action.pokemons],\r\n                nextPokemonsPage: action.nextPage\r\n            }\r\n        }\r\n        case SET_NEW_POKEMONS: {\r\n            return {\r\n                ...state,\r\n                pokemons: state.pokemons.concat(action.newPokemons),\r\n                nextPokemonsPage: action.nextPage\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case IS_NEW_POKEMONS_LOADING: {\r\n            return {\r\n                ...state,\r\n                isNewPokemonsLoading: action.isNewPokemonsLoading,\r\n                next: action.nextPage\r\n            }\r\n        }\r\n        case SET_CURRENT_POKEMON: {\r\n            return {\r\n                ...state,\r\n                currentPokemon: Number(action.currentPokemon)\r\n            }\r\n        }\r\n        case SET_CURRENT_TYPE: {\r\n            return {\r\n                ...state,\r\n                currentType: action.currentType\r\n            }\r\n        }\r\n\r\n        case SET_ALL_TYPES: {\r\n            return {\r\n                ...state,\r\n                types: action.types\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setPokemons = (pokemons, nextPage) => ({type: SET_POKEMONS, pokemons, nextPage})\r\nexport const setAllTypes = (types) => ({type: SET_ALL_TYPES, types})\r\nexport const setNewPokemons = (newPokemons, nextPage) => ({type: SET_NEW_POKEMONS, newPokemons, nextPage})\r\nexport const setCurrentPokemon = (currentPokemon) => ({type: SET_CURRENT_POKEMON, currentPokemon})\r\nexport const setCurrentType = (currentType) => ({type: SET_CURRENT_TYPE, currentType})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const isNewPokemonsLoading = (isNewPokemonsLoading) => ({type: IS_NEW_POKEMONS_LOADING, isNewPokemonsLoading})\r\n\r\nexport const getPokemons = (count) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n\r\n    let data = await pokemonsAPI.getPokemons(count)\r\n    let pokeInfo = await dispatch(getPokemonsInfo(data.results))\r\n    dispatch(setPokemons(pokeInfo, data.next))\r\n    let allTypes = await pokemonsAPI.getTypes()\r\n    dispatch(setAllTypes(allTypes.results))\r\n\r\n    dispatch(toggleIsFetching(false))\r\n\r\n}\r\nexport const getAllTypes = () => async (dispatch) => {\r\n    return await pokemonsAPI.getTypes().results\r\n}\r\n\r\nexport const getPokemonsInfo = (data) => async (dispatch) => {\r\n    return await Promise.all(data.map((p) => {\r\n        return pokemonsAPI.getPokemonData(p.name)\r\n    }))\r\n\r\n}\r\nexport const loadMore = (url) => async (dispatch) => {\r\n    dispatch(isNewPokemonsLoading(true))\r\n    let data = await pokemonsAPI.getNewData(url)\r\n    let pokeInfo = await dispatch(getPokemonsInfo(data.results))\r\n    dispatch(setNewPokemons(pokeInfo, data.next))\r\n\r\n    dispatch(isNewPokemonsLoading(false))\r\n\r\n}\r\n\r\nexport default pokemonsReducer","import React from \"react\";\r\n\r\nexport const updateObjectInArray = (items, itemId, objIdName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objIdName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}\r\nexport const objectToJsx = (obj) => {\r\n    if (obj) return Object.keys(obj).map((x, y) => {\r\n        if (typeof obj[x] === \"string\") {\r\n            return (\r\n                <div key={y}>{x} : {obj[x]} </div>\r\n            )\r\n        } else if (typeof obj[x] === \"object\") {\r\n            return (\r\n                <div key={y}>{objectToJsx(obj[x])}</div>\r\n            )\r\n        }\r\n        return ''\r\n    })\r\n}\r\n\r\nexport const isEmptyObject = (obj) => {\r\n    for (let i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport const toZeroedNumber = (number, countOfDigits) => {\r\n    let num = number.toString()\r\n    if (num.length === countOfDigits) {\r\n        return num\r\n    } else if (num.length < countOfDigits) {\r\n        return '0'.repeat(countOfDigits - num.length) + num\r\n    } else {\r\n        return '0'.repeat(countOfDigits)\r\n    }\r\n\r\n}\r\nexport const UcFirst = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1)\r\n}","import React from 'react';\r\nimport s from './Pokemons.module.css'\r\nimport {UcFirst} from \"../utils/object-helpers\";\r\n\r\nfunction Pokemon({pokemon, setCurrentPokemon}) {\r\n    let p = pokemon\r\n    return (\r\n        <div className={s.pokemonCard} onClick={() => {\r\n            setCurrentPokemon(p.id)\r\n        }}>\r\n            <img src={`https://pokeres.bastionbot.org/images/pokemon/${p.id}.png`} alt={p.name+\" img\"}/>\r\n            <div className={s.pokemonNameCard}>{UcFirst(p.name)}</div>\r\n            <div className={s.types} >\r\n                {p.types.map(pok => {\r\n                    return <div key={pok.type.name} className={s.type + ' ' + s[pok.type.name]}>{UcFirst(pok.type.name)}</div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pokemon;","import React from 'react';\r\nimport Pokemon from \"./Pokemon\";\r\nimport s from './Pokemons.module.css'\r\n\r\nfunction Pokemons(props) {\r\n    let showedPokemons = props.pokemons.filter(p => {\r\n            if (props.currentType === 'all') return true\r\n            let types = p.types.map(pok => {\r\n                return pok.type.name\r\n            })\r\n            return types.some(t => {\r\n\r\n                    return t === props.currentType\r\n                }\r\n            )\r\n        }\r\n    ).map(p => {\r\n            return <div key={p.id}><Pokemon pokemon={p} setCurrentPokemon={props.setCurrentPokemon}/></div>\r\n\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.pokemonsContainer}>\r\n                {showedPokemons.length > 0\r\n                    ? showedPokemons\r\n                    : <></>}\r\n\r\n            </div>\r\n            <div>{showedPokemons.length <= 0\r\n                ? <div className={s.noPokemons}>No Pokemon</div>\r\n                : <></>}\r\n            </div>\r\n            {props.isNewPokemonsLoading\r\n                ? <div className={s.pokemonsListBlockButton}>Loading...</div>\r\n                : <button className={s.pokemonsListBlockButton} onClick={() => {\r\n                    props.loadMore(props.next)\r\n                }}>Load More</button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pokemons;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import preloader from \"../../../logo.svg\";\r\nimport React from \"react\";\r\nimport '../../../App.css';\r\nimport s from './Preloader.module.css'\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div className={s.preloaderWrapper}>\r\n            <img  className={s.preloader} src={preloader} alt={'loader'}/>\r\n        </div>\r\n)}\r\n export default Preloader","import React from 'react';\r\nimport s from './Pokemons.module.css'\r\nimport {toZeroedNumber, UcFirst} from \"../utils/object-helpers\";\r\n\r\nfunction PokemonInfo({pokemon}) {\r\n    let p = pokemon\r\n    let stats = new Map()\r\n    p?.stats.forEach(s => {\r\n        stats.set(s.stat.name, s.base_stat)\r\n    })\r\n    return (\r\n        <div className={s.pokemonInfoCard} >\r\n            <img src={`https://pokeres.bastionbot.org/images/pokemon/${p.id}.png`} alt={p.name}/>\r\n            <div className={s.pokemonNameInfo}>\r\n                {UcFirst(p.name) + ' #' + toZeroedNumber(p.id, 3)}\r\n            </div>\r\n\r\n            <table>\r\n                <tbody>\r\n                <tr>\r\n                    <td>Type</td>\r\n                    <td>\r\n                        {p.types.map(pok => {\r\n                            return <div key={pok.type.name} className={pok.type.name}>{UcFirst(pok.type.name)}</div>\r\n                        })}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Attack</td>\r\n                    <td>{stats.get('attack')}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Defense</td>\r\n                    <td>{stats.get('defense')}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>HP</td>\r\n                    <td>{stats.get('hp')}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>SP Attack</td>\r\n                    <td>{stats.get('special-attack')}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>SP Defense</td>\r\n                    <td>{stats.get('special-defense')}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Speed</td>\r\n                    <td>{stats.get('speed')}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Weight</td>\r\n                    <td>{p.weight}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Total moves</td>\r\n                    <td>{p.moves.length}</td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokemonInfo;","import React, {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getPokemons, loadMore, setCurrentPokemon, setCurrentType} from \"../redux/pokemons-reducer\";\r\nimport Pokemons from \"./Pokemons\";\r\nimport Preloader from \"./common/Preloader/Preloader\";\r\nimport PokemonInfo from \"./PokemonInfo\";\r\nimport s from './Pokemons.module.css'\r\nimport {UcFirst} from \"../utils/object-helpers\";\r\n\r\nfunction PokemonsContainer(props) {\r\n\r\n    useEffect(() => {\r\n        props.getPokemons(12)\r\n    }, []);\r\n\r\n    return (\r\n        <div className={s.PokemonsContainerWrapper}>\r\n            <div className={s.PokemonsContainer}>\r\n                {props.isPokemonsLoading\r\n                    ? <Preloader/>\r\n                    : <div className={s.pokemonsBlock}>\r\n                        <div className={s.dropdownWrapper}>\r\n                            <div className={s.dropdown}>\r\n                                <button className={s.dropbtn}>{UcFirst(props.currentType)}</button>\r\n                                <div className={s.dropdownContent}>\r\n\r\n                                    <div className={s.all} onClick={() => props.setCurrentType('all')}>All</div>\r\n                                    {\r\n                                        props.types.map((t) => {\r\n                                            return <div key={t.name} onClick={() => props.setCurrentType(t.name)}\r\n                                                        className={s[t.name]}>{UcFirst(t.name)}</div>\r\n                                        })\r\n                                    }\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div className={s.pokemonsListBlock}>\r\n                            <Pokemons {...props}/>\r\n                        </div>\r\n                        <div className={s.pokemonInfoBlock}>\r\n                            <PokemonInfo pokemon={props.pokemons.find(p => {\r\n                                return p.id === props.currentPokemon\r\n                            })}/>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: state.pokemonsPage.pokemons,\r\n        isPokemonsLoading: state.pokemonsPage.isFetching,\r\n        isNewPokemonsLoading: state.pokemonsPage.isNewPokemonsLoading,\r\n        next: state.pokemonsPage.nextPokemonsPage,\r\n        currentPokemon: state.pokemonsPage.currentPokemon,\r\n        types: state.pokemonsPage.types,\r\n        currentType: state.pokemonsPage.currentType\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        getPokemons,\r\n        loadMore,\r\n        setCurrentPokemon,\r\n        setCurrentType\r\n    }\r\n)\r\n(PokemonsContainer)","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport pokemonsReducer from \"./pokemons-reducer\";\r\nlet reducers = combineReducers({\r\n    pokemonsPage:pokemonsReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(\r\n   applyMiddleware(thunkMiddleware)\r\n));\r\nexport default store\r\n\r\nwindow.store = store","import './App.css';\r\nimport PokemonsContainer from \"./components/PokemonsContainer\";\r\nimport store from \"./redux/redux-store\"\r\nimport {Provider} from \"react-redux\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={store}>\r\n                <div className=\"App\">\r\n                    <header className=\"App-header\">\r\n                        PokeDex\r\n                    </header>\r\n                    <PokemonsContainer/>\r\n                </div>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}